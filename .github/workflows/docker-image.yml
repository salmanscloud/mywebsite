name: Build and Push Docker Image To Docker Hub

on:
  push:
    branches: [ main, dev, qa, prod ] 
  pull_request:
    branches: [ dev, qa, prod ] 

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Ensure all history is fetched, especially for tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5

      - name: Generate semantic version
        id: semver
        run: |
          if [[ "$(git describe --tags --abbrev=0 2>/dev/null)" == "" ]]; then
            echo "version=0.0.1" >> $GITHUB_OUTPUT  # Set a default version if no tags exist
          elif [[ "${{ steps.branch-name.outputs.current_branch }}" == "main" ]]; then
            echo "version=$(git describe --tags --abbrev=0 | sed 's/v//' | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.branch-name.outputs.current_branch }}" == "prod" ]]; then
            echo "version=$(git describe --tags --abbrev=0 | sed 's/v//' | awk -F. '{$1 = $1 + 1; $2 = 0; $3 = 0;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.branch-name.outputs.current_branch }}" == "qa" ]]; then
            echo "version=$(git describe --tags --abbrev=0 | sed 's/v//' | awk -F. '{$2 = $2 + 1; $3 = 0;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
          else
            echo "version=$(git describe --tags --abbrev=0 | sed 's/v//' | awk -F. '{$3 = $3 + 1;} 1' | sed 's/ /./g')" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/website:${{ steps.semver.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/website:${{ steps.branch-name.outputs.current_branch }}
            ${{ secrets.DOCKER_USERNAME }}/website:latest

      - name: Configure Git for tagging
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      
